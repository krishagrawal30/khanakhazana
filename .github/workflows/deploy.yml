name: Deploy to GitHub Pages with .tech domain

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job (for static sites, this just validates the files)
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Validate HTML files
        run: |
          echo "Validating HTML files..."
          # Check if main files exist
          ls -la index.html restaurant.html order.html
          
          # Basic HTML validation
          if ! grep -q "<!DOCTYPE html>" index.html; then
            echo "Error: index.html missing DOCTYPE"
            exit 1
          fi
          
          if ! grep -q "<!DOCTYPE html>" restaurant.html; then
            echo "Error: restaurant.html missing DOCTYPE"
            exit 1
          fi
          
          if ! grep -q "<!DOCTYPE html>" order.html; then
            echo "Error: order.html missing DOCTYPE"
            exit 1
          fi
          
          echo "‚úÖ HTML files validation passed"
          
      - name: Validate CSS and JS files
        run: |
          echo "Validating CSS and JS files..."
          ls -la style.css script.js
          
          # Check if CSS file is not empty
          if [ ! -s style.css ]; then
            echo "Error: style.css is empty"
            exit 1
          fi
          
          # Check if JS file is not empty
          if [ ! -s script.js ]; then
            echo "Error: script.js is empty"
            exit 1
          fi
          
          echo "‚úÖ CSS and JS files validation passed"
          
      - name: Validate CNAME configuration
        run: |
          echo "Validating CNAME configuration..."
          if [ ! -f CNAME ]; then
            echo "Error: CNAME file missing"
            exit 1
          fi
          
          DOMAIN=$(cat CNAME)
          echo "Domain configured: $DOMAIN"
          
          if [[ ! "$DOMAIN" =~ \.tech$ ]]; then
            echo "Error: CNAME should contain a .tech domain"
            exit 1
          fi
          
          echo "‚úÖ CNAME validation passed"
          
      - name: Check image assets
        run: |
          echo "Checking image assets..."
          if [ ! -d "images" ]; then
            echo "Warning: images directory not found"
          else
            echo "Images directory contents:"
            ls -la images/
            echo "‚úÖ Images directory found"
          fi
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Verify deployment
        run: |
          echo "üöÄ Website deployed successfully!"
          echo "üåê Your .tech domain should now serve the website"
          echo "üìã Next steps:"
          echo "   1. Configure DNS for your .tech domain"
          echo "   2. Wait for DNS propagation (24-48 hours)"
          echo "   3. Visit your .tech domain to verify"